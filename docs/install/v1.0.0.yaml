apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  labels:
    control-plane: cb-index-operator
  name: couchbaseindexsets.couchbase.btburnett.com
spec:
  group: couchbase.btburnett.com
  names:
    kind: CouchbaseIndexSet
    listKind: CouchbaseIndexSetList
    plural: couchbaseindexsets
    singular: couchbaseindexset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.bucketName
      name: Bucket
      type: string
    - jsonPath: .status.indexCount
      name: Indices
      type: integer
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Defines a set of Couchbase indices
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Defines the desired state of a set of Couchbase indices
            properties:
              activeDeadlineSeconds:
                default: 600
                description: Specifies the duration in seconds relative to the startTime that a sync attempt may be active before the system tries to terminate it; value must be positive integer
                format: int64
                minimum: 1
                type: integer
              backoffLimit:
                default: 2
                description: Specifies the number of retries before marking a sync attempt as failed.
                format: int32
                minimum: 0
                type: integer
              bucketName:
                description: Name of the bucket
                type: string
              cluster:
                description: Defines how to connect to a Couchbase cluster
                maxProperties: 1
                minProperties: 1
                properties:
                  clusterRef:
                    description: Connect via a CouchbaseCluster resource in Kubernetes
                    properties:
                      name:
                        description: Name of the CouchbaseCluster resource in Kubernetes. This resource must be in the same namespace.
                        type: string
                      secretName:
                        description: Optional name of a secret containing a username and password. If not present, uses the AdminSecretName found on the CouchbaseCluster resource.
                        type: string
                    required:
                    - name
                    type: object
                  manual:
                    description: Connect via manual connection information
                    properties:
                      connectionString:
                        description: Couchbase connection string, in "couchbase://" format
                        pattern: ^couchbases?:\/\/(([\w\d\-\_]+\.)*[\w\d\-\_]+,)*([\w\d\-\_]+\.)*[\w\d\-\_]+(:\d+)?\/?$
                        type: string
                      secretName:
                        description: Name of a secret containing a username and password
                        type: string
                    required:
                    - connectionString
                    - secretName
                    type: object
                type: object
              indices:
                description: List of global secondary indices
                items:
                  description: Defines the desired state of a Couchbase Global Secondary Index
                  properties:
                    collectionName:
                      description: Name of the index's collection, assumes "_default" if not present
                      minLength: 1
                      pattern: ^_default$|^[A-Za-z0-9\-][A-Za-z0-9_\-%]*$
                      type: string
                    condition:
                      description: Conditions to filter documents included on the index
                      type: string
                    indexKey:
                      description: List of properties or deterministic functions which make up the index key
                      items:
                        type: string
                      minItems: 1
                      type: array
                    name:
                      description: Name of the index
                      minLength: 1
                      pattern: ^[A-Za-z][A-Za-z0-9#_]*$
                      type: string
                    numReplicas:
                      description: Number of replicas
                      minimum: 0
                      type: integer
                    partition:
                      description: Defines partition information for a partitioned index
                      properties:
                        expressions:
                          description: Attributes to be used to partition documents across nodes
                          items:
                            type: string
                          minItems: 1
                          type: array
                        numPartitions:
                          minimum: 2
                          type: integer
                        strategy:
                          default: Hash
                          description: Partition strategy to use, defaults to Hash (which is currently the only option)
                          enum:
                          - Hash
                          type: string
                      required:
                      - expressions
                      type: object
                    retainDeletedXAttr:
                      description: Enable for Sync Gateway indices to preserve deleted XAttrs
                      type: boolean
                    scopeName:
                      description: Name of the index's scope, assumes "_default" if not present
                      minLength: 1
                      pattern: ^_default$|^[A-Za-z0-9\-][A-Za-z0-9_\-%]*$
                      type: string
                  required:
                  - indexKey
                  - name
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            required:
            - bucketName
            - cluster
            type: object
          status:
            description: Defines the observed state of CouchbaseIndexSet
            properties:
              conditions:
                description: Conditions represent the latest available observations of an object's state
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              configMapName:
                description: Name of the generated config map
                type: string
              indexCount:
                description: Number of indices
                format: int32
                type: integer
              indices:
                description: List of global secondary indices created and managed by this resource
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
            required:
            - conditions
            - indexCount
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-manager-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - secret
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - couchbase.btburnett.com
  resources:
  - couchbaseindexsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - couchbase.btburnett.com
  resources:
  - couchbaseindexsets/finalizers
  verbs:
  - update
- apiGroups:
  - couchbase.btburnett.com
  resources:
  - couchbaseindexsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - couchbase.com
  resources:
  - couchbaseclusters
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cb-index-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: cb-index-operator-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-manager-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cb-index-operator-manager-role
subjects:
- kind: ServiceAccount
  name: cb-index-operator-controller-manager
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cb-index-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: cb-index-operator-controller-manager
  namespace: default
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: e3800ad5.btburnett.com
kind: ConfigMap
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-manager-config
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-controller-manager-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: cb-index-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: cb-index-operator
  name: cb-index-operator-controller-manager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: cb-index-operator
  template:
    metadata:
      labels:
        control-plane: cb-index-operator
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/brantburnett/couchbase-index-operator:1.0.0-beta001
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: cb-index-operator-controller-manager
      terminationGracePeriodSeconds: 10
